{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","key","ImageSearch","setSearchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA0CeA,EAxCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEbC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACE,yBAAKC,UAAU,8CACb,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0CAAf,YACYH,EAAMO,MAElB,wBAAIJ,UAAU,aACZ,4BACE,0CACCH,EAAMQ,OAET,4BACE,gDACCR,EAAMS,WAET,4BACE,0CACCT,EAAMU,SAIb,yBAAKP,UAAU,aACZF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACR,0BACEC,IAAKD,EACLV,UAAU,4FAFZ,IAIIS,SCFCG,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACjBC,mBAAS,IADQ,mBAClCC,EADkC,KAC5BC,EAD4B,KAQzC,OACE,yBAAKhB,UAAU,iDACb,0BAAMiB,SAPO,SAACC,GAChBA,EAAEC,iBACFN,EAAcE,IAKcf,UAAU,mBAClC,yBAAKA,UAAU,8DACb,2BACEoB,SAAU,SAACF,GAAD,OAAOF,EAAQE,EAAEG,OAAOC,QAClCC,KAAK,OACLvB,UAAU,iHACVwB,YAAY,yBAEd,4BACED,KAAK,SACLvB,UAAU,mIAFZ,cCsBKyB,MAtCf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACNY,EADM,KACEC,EADF,OAEqBb,oBAAS,GAF9B,mBAENc,EAFM,KAEKC,EAFL,OAGWf,mBAAS,IAHpB,mBAGNgB,EAHM,KAGAC,EAHA,KAiBb,OAZAC,qBAAU,WACRC,MAAM,gCAAD,OAC6BC,qCAD7B,cACwEJ,EADxE,kCAGFK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAACX,IAGF,yBAAK9B,UAAU,qBACb,kBAAC,EAAD,CAAaa,cAAe,SAACE,GAAD,OAAUgB,EAAQhB,OAE5Ca,GAA+B,IAAlBF,EAAOkB,QACpB,wBAAI5C,UAAU,sCAAd,mBAGD4B,EACC,wBAAI5B,UAAU,sCAAd,cAEA,yBAAKA,UAAU,0BACZ0B,EAAOlB,KAAI,SAACX,GAAD,OACV,kBAAC,EAAD,CAAWc,IAAKd,EAAMgD,GAAIhD,MAAOA,UC7B7CiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.80671947.chunk.js","sourcesContent":["import React from 'react';\n\nconst ImageCard = ({ image }) => {\n  // console.log(image.tags.split(','));\n  const tags = image.tags.split(',');\n\n  return (\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\n      <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-purple-500 text-xl mb-2\">\n          Photo by {image.user}\n        </div>\n        <ul className=\"font-thin\">\n          <li>\n            <strong>Views:</strong>\n            {image.views}\n          </li>\n          <li>\n            <strong>Downloads: :</strong>\n            {image.downloads}\n          </li>\n          <li>\n            <strong>Likes:</strong>\n            {image.likes}\n          </li>\n        </ul>\n      </div>\n      <div className=\"px-6 py-4\">\n        {tags.map((tag, index) => (\n          <span\n            key={index}\n            className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\"\n          >\n            #{tag}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageCard;\n","import React, { useState } from 'react';\n\nconst ImageSearch = ({ setSearchText }) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setSearchText(text);\n  };\n\n  return (\n    <div className=\"max-w-sm roudned overlow-hidden my-10 mx-auto\">\n      <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\n        <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n          <input\n            onChange={(e) => setText(e.target.value)}\n            type=\"text\"\n            className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px2 leading-tight focus:outline-none\"\n            placeholder=\"Search Image here...\"\n          />\n          <button\n            type=\"submit\"\n            className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\"\n          >\n            Search\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ImageSearch;\n","import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n  useEffect(() => {\n    fetch(\n      `https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setImages(data.hits);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, [term]);\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch setSearchText={(text) => setTerm(text)} />\n\n      {!isLoading && images.length === 0 && (\n        <h1 className=\"text-6xl text-center mx-auto mt-32\">No Images Found</h1>\n      )}\n\n      {isLoading ? (\n        <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1>\n      ) : (\n        <div className=\"grid grid-cols-3 gap-4\">\n          {images.map((image) => (\n            <ImageCard key={image.id} image={image} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/main.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}